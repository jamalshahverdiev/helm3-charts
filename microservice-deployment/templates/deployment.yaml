---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "microservice.name" . }}
  namespace: {{ .Values.ns_name }}
spec:
  {{- if .Values.strategy.enabled }}
  strategy:
    type: {{ .Values.strategy.type }}
    rollingUpdate: 
      maxUnavailable: {{ .Values.strategy.rollingUpdate.maxUnavailable }}
      maxSurge: {{ .Values.strategy.rollingUpdate.maxSurge }}
  minReadySeconds: {{ .Values.minReadySeconds }} 
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  {{- end }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "microservice.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "microservice.name" . }}
    spec:
      serviceAccountName: {{ .Values.service.account_name }}
      terminationGracePeriodSeconds: 60
      containers:
      - name: {{ include "microservice.name" . }}
        image: {{ .Values.image.repo_url }}/{{ .Values.image.repo_name }}/{{ .Values.ns_name }}/{{ include "microservice.name" . }}:{{ .Values.image.image_vers }}
        resources:
          {{- with .Values.resource }}
          limits:
            memory: {{ .limits.memory }}
            cpu: {{ .limits.cpu }}
          requests:
            memory: {{ .requests.memory }}
            cpu: {{ .requests.cpu }}
          {{- end }}
        readinessProbe:
          {{- with .Values.service }}
          httpGet:
            path: {{ .actuator_path }}
            port: {{ .dst_port }}
          {{- end }}
          {{- with .Values.nessprobe }}
          initialDelaySeconds: {{ .initialDelay }}
          periodSeconds: {{ .period }}
          timeoutSeconds: {{ .timeout }}
          failureThreshold: {{ .failure }}
          successThreshold: {{ .success }}
          {{- end }}
        env:
        - name: DEPLOY_ENV
          value: {{ .Values.deploy_env }}
{{- if .Values.secrets.enabled }}
{{- range .Values.secrets.apis }}
        - name: {{ .name }}
          valueFrom:
            fieldRef:
              fieldPath: {{ .fieldPath }}
{{- end }}
{{- range .Values.secrets.vaults }}
        - name: {{ .name }}
          valueFrom: 
            secretKeyRef:
              name: {{ .valueFrom.name }}
              key: {{ .valueFrom.key }}
{{- end }}
{{- end }}

